name: sharding-repl-cache

services:
  configSrv:
    image: mongo:latest
    container_name: configSrv
    restart: always
    ports:
      - "27017:27017"
    networks:
      app-network:
        ipv4_address: 173.17.0.10
    volumes:
      - config-data:/data/db
    command: 
      [
        "--configsvr",
        "--replSet",
        "config_server",
        "--bind_ip_all",
        "--port",
        "27017"
      ]
    healthcheck:
      test: ["CMD", "mongo","--eval","db.adminCommand('ping')"]
      interval: 5s
      start_period: 10s

  ### mongos_router
  mongos_router:
    image: mongo:latest
    container_name: mongos_router
    restart: always
    ports:
      - "27024:27024"
    networks:
      app-network:
        ipv4_address: 173.17.0.100
    command:
      [
        "mongos",
        "--configdb", 
        "config_server/configSrv:27017",
        "--bind_ip_all",
        "--port",
        "27024"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  ### shard1
  shard1ReplMaster:
    image: mongo:latest
    container_name: shard1ReplMaster
    restart: always
    ports:
      - "27018:27018"
    networks:
      app-network:
        ipv4_address: 173.17.0.11
    volumes:
      - shard1-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard1",
        "--bind_ip_all",
        "--port",
        "27018"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard1Repl1:
    image: mongo:latest
    container_name: shard1Repl1
    restart: always
    ports:
      - "27019:27019"
    networks:
      app-network:
        ipv4_address: 173.17.0.12
    volumes:
      - shard1-repl1-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard1",
        "--bind_ip_all",
        "--port",
        "27019"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard1Repl2:
    image: mongo:latest
    container_name: shard1Repl2
    restart: always
    ports:
      - "27020:27020"
    networks:
      app-network:
        ipv4_address: 173.17.0.13
    volumes:
      - shard1-repl2-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard1",
        "--bind_ip_all",
        "--port",
        "27020"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  ### shard2
  shard2ReplMaster:
    image: mongo:latest
    container_name: shard2ReplMaster
    restart: always
    ports:
      - "27021:27021"
    networks:
      app-network:
        ipv4_address: 173.17.0.14
    volumes:
      - shard2-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard2",
        "--bind_ip_all",
        "--port",
        "27021"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s
      
  shard2Repl1:
    image: mongo:latest
    container_name: shard2Repl1
    restart: always
    ports:
      - "27022:27022"
    networks:
      app-network:
        ipv4_address: 173.17.0.15
    volumes:
      - shard2-repl1-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard2",
        "--bind_ip_all",
        "--port",
        "27022"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard2Repl2:
    image: mongo:latest
    container_name: shard2Repl2
    restart: always
    ports:
      - "27023:27023"
    networks:
      app-network:
        ipv4_address: 173.17.0.16
    volumes:
      - shard2-repl2-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard2",
        "--bind_ip_all",
        "--port",
        "27023"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s


 ### redis
  redis_1:
    image: "redis:latest"
    container_name: redis_1
    ports:
      - "6479:6379"
    volumes:
      - redis_1_data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: [ "redis-server", "/usr/local/etc/redis/redis.conf" ]
    networks:
      app-network:
        ipv4_address: 173.17.2.10


  pymongo_api:
    container_name: pymongo_api
    build: 
      context: api_app
      dockerfile: Dockerfile
    image: kazhem/pymongo_api:1.0.0
    depends_on:
      - mongos_router
      - redis_1
    networks:
      app-network:
        ipv4_address: 173.17.100.100
    ports:
      - 8080:8080
    environment:
      MONGODB_URL: "mongodb://173.17.0.100:27024"
      MONGODB_DATABASE_NAME: "somedb"
      REDIS_URL: "redis://173.17.2.10:6379"

networks:
  app-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 173.17.0.0/16

volumes:
  config-data:
  shard1-data:
  shard1-repl1-data:
  shard1-repl2-data:
  shard2-data:
  shard2-repl1-data:
  shard2-repl2-data:
  redis_1_data: